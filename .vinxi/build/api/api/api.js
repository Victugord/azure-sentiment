import{H3Event as u,getRequestURL as E,getRequestWebStream as x,eventHandler as A}from"h3";import{getContext as b}from"unctx";import{AsyncLocalStorage as q}from"node:async_hooks";import{Hono as R}from"hono";import{TextAnalyticsClient as S,AzureKeyCredential as _}from"@azure/ai-text-analytics";import*as v from"dotenv";function T(e){let t;const n=p(e),o={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(n,{...o,body:e.node.req.body}):new Request(n,{...o,get body(){return t||(t=L(e),t)}})}function w(e){return e.web??={request:T(e),url:p(e)},e.web.request}function U(){return G()}const m=Symbol("$HTTPEvent");function C(e){return typeof e=="object"&&(e instanceof u||e?.[m]instanceof u||e?.__is_event__===!0)}function f(e){return function(...t){let n=t[0];if(C(n))t[0]=n instanceof u||n.__is_event__?n:n[m];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(n=U(),!n)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");t.unshift(n)}return e(...t)}}const p=f(E),L=f(x),N=f(w);function H(){return b("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:q})}function G(){return H().use().event}v.config();const c=new R().basePath("/api");c.use("*");c.post("/sentiment-analysis",async e=>{try{const t=process.env.AZURE_LANGUAGE_KEY,n=process.env.AZURE_LANGUAGE_ENDPOINT;if(!t||!n)return e.json({success:!1,error:"Configuração em falta. Verifique as variáveis de ambiente AZURE_LANGUAGE_KEY e AZURE_LANGUAGE_ENDPOINT."},500);const o=await e.req.json(),{text:s,language:d="pt"}=o;if(!s||s.trim().length===0)return e.json({success:!1,error:"Texto é obrigatório para análise"},400);const g=new S(n,new _(t)),y=[{text:s,id:"0",language:d}],r=(await g.analyzeSentiment(y,{includeOpinionMining:!0}))[0];if(r.error)return e.json({success:!1,error:`Erro na análise: ${r.error}`},500);const h={documentText:s,overallSentiment:r.sentiment,confidenceScores:r.confidenceScores,sentences:r.sentences.map(a=>({text:a.text,sentiment:a.sentiment,confidenceScores:a.confidenceScores,opinions:a.opinions?.map(i=>({target:{text:i.target.text,sentiment:i.target.sentiment,confidenceScores:i.target.confidenceScores},assessments:i.assessments.map(l=>({text:l.text,sentiment:l.sentiment}))}))||[]}))};return e.json({success:!0,data:h})}catch(t){return console.error("Erro no processamento:",t),e.json({success:!1,error:"Erro interno do servidor. Verifique a configuração do Azure AI."},500)}});c.get("/health",e=>e.json({status:"OK",timestamp:new Date().toISOString()}));const Z=A(async e=>{const t=N(e);return c.fetch(t)});export{Z as default};
